# -*- coding: utf-8 -*-
"""
Created on Wed Oct 28 16:15:43 2015

@author: gibon
"""

"""
From https://en.wikipedia.org/wiki/Triangle_center?oldformat=true#Fermat_point

Its trilinear coordinates are
x:y:z =
1/sin(A + π/3) : 1/sin(B + π/3) : 1/sin(C + π/3)

From http://faculty.evansville.edu/ck6/encyclopedia/ETC.html

Its barycentric coordinates are
f(a,b,c) : f(b,c,a) : f(c,a,b), where
f(a,b,c) = a4 - 2(b2 - c2)2 + a2(b2 + c2 + 4*sqrt(3)*Area(ABC))


From http://mathoverflow.net/questions/36665/distance-of-a-barycentric-coordinate-from-a-triangle-vertex

Distance from a barycentrically-defined point to a vertex

d^2 = (b*w−c*v)^2 + v*w*((b+c)^2 − a^2) (distance to A)
"""

from numpy import arccos
from sympy import cos, pi
from math import gcd

def angles(a,b,c): # Unused
    """Returns angles A, B and C for sides a, b and c"""
    A = arccos((b**2+c**2-a**2)/(2*b*c))
    B = arccos((a**2+c**2-b**2)/(2*a*c))
    C = arccos((a**2+b**2-c**2)/(2*a*b))
    return A,B,C

def area(a,b,c):
    """Returns the area of a triangle with Heron's formula"""
    p = (a+b+c)/2 # Half perimeter
    A = (p * (p-a) * (p-b) * (p-c))**.5
    if A == int(A):
        return int(A)
    return A

def baryc(a,b,c):
    """Barycentric coordinates of the Fermat point"""
    def f(m,n,o):
        return m**4 - 2*(n**2 - o**2)**2 + m**2*(n**2 + o**2 + 4*3**.5*area(m,n,o))
    S = f(a,b,c) + f(b,c,a) + f(c,a,b)
    return f(a,b,c)/S, f(b,c,a)/S, f(c,a,b)/S

def dist_baryc(u,v,w,a,b,c):
    """Distance from A, B, and C of point u:v:w (barycenter)"""
    da = (b*w-c*v)**2+v*w*((b+c)**2-a**2)
    db = (a*w-c*u)**2+u*w*((a+c)**2-b**2)
    dc = (a*v-b*u)**2+u*v*((a+b)**2-c**2)
    return da**.5,db**.5,dc**.5

M    = 100
sols = []

for a in range(1,M):
    for b in range(1,a):
        max_c = min(a+b,int((a**2+b**2-a*b*cos(2*pi/3))))
        for c in range(a-b+1,max_c):
            
            u,v,w = baryc(a,b,c)
            d = sum(dist_baryc(u,v,w,a,b,c))
            if d == int(d):
                sols.append((a,b,c,int(d)))

"""
The answers seem to be https://oeis.org/A229839
Generated by all multiples of https://oeis.org/A089025

Proof?

Draw the equilateral triangle containing AC', BC' and the point C.
It has side x.
CC' has integer length when x is integer??

We can also find all sides c of triangles with C = 60°
https://en.wikipedia.org/wiki/Integer_triangle#Integer_triangles_with_a_60.C2.B0_angle_.28angles_in_arithmetic_progression.29
"""

sols = []

M = 120000

for m in range(1,int(M**.5)+1):
    for n in range(1,m+1):
        if (m - n)%3 != 0 and gcd(m,n) == 1:
            c = 2*m*n + m*m
            if c <= M:
                sols.append(c)
                
sols.sort()

sieve_sols = [False] * M

for sol in sols:
    sieve_sols[sol::sol] = [True] * int((M-1)/sol)

sols_final = [i for i,b in enumerate(sieve_sols) if b]

n = sum(sols_final)